snippet initcpp "initialize cpp"
/***********It's not at all important to get it right the first time!
			It's vitally important to get it right the last time!!!  ***********/ 
#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef unsigned long long int ull;

#define DEBUG(x) cout <<">>"<<#x<<": "<<(x)<< endl;
#define DEBUG2(x,y) cout<<#x<<" :: "<<x<<"    "<<#y<<" :: "<<y<<endl;
#define boost ios::sync_with_stdio(0); cin.tie(0)
#define mem(x,val) memset((x),(val),sizeof(x))
#define pii pair<int,int>
#define fi first
#define se second
#define pb push_back
#define mp make_pair
const ll INF = 2e18;
/**************************************************************************/

int main()
{
	boost;
	int t , n, m;
	$1
	return 0;
}
endsnippet

snippet init_bit "functions for bit operation for cpp"
inline int two(int n) { return 1 << n; }  
inline int test_bit(int n, int b) { return (n>>b)&1; }
inline void set_bit(int & n, int b) { n |= two(b); }
inline void unset_bit(int & n, int b) { n &= ~two(b); }
$1
endsnippet


snippet init_sort_loop "compressed loops for cpp"
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)
$1
endsnippet


snippet init_sort_scan "sort form to take input via scan in cpp"
#define SCN(n) scanf("%d",&n)
#define SCNLL(n) scanf("%lld",&n)
#define SCN2(n,m) scanf("%d%d",&n,&m)
$1
endsnippet


snippet init_stringConv "functions to convert int to string and string to int"
int toInt(string s){int tot = 0;for(int i = s.size()-1; i >= 0; i--){tot+=((s[i]-'0')%mod)*fastPow(10,i);tot%=mod;}return tot;}
string toString(int a){string s = "";while(a){s = (char)('0'+a%10) + s;a/=10;}return s;}
$1
endsnippet


snippet init_pow-prime "prime and power function"
ll power(ll a,ll b,ll M){if(b==0) return 1;else if(b%2 == 0) return power((a*a)%M,b/2,M);else return (a*power((a*a)%M,(b-1)/2,M))%M;}
int fastPow(int b, int e){int r = 1;while(e){if(e%2 == 1){r*=b;r%=mod;}b*=b;b%=mod;e/=2;}return r;}
bool isPrime(int a){if(a == 1) {return false;}int f = sqrt(a);for(int i = 2; i<=f; i++){if(a%i == 0){return false;}}return true;}
$1
endsnippet


snippet init_pbds "Policy based data structures"
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/hash_policy.hpp>
// #include <ext/pb_ds/trie_policy.hpp>
// #include <ext/pb_ds/tag_and_trait.hpp>
#include <functional>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag,
			tree_order_statistics_node_update> ordered_set;
$1
endsnippet


snippet init_sieve "init sieve function"
int N=$1
bool isPrime[N];

void sieve(){
    for(int i  = 0;i<N;i++)
    	isPrime[i] = true;
    isPrime[0] = isPrime[1] = false;
    for(int i=2;i*i<N;i++){
        if(isPrime[i]){
            for(int j = i*i;j<N;j = j+i)
            isPrime[j] = false;
        }
    }
}
endsnippet 
